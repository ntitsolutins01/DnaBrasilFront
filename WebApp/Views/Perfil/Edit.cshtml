@model WebApp.Models.PerfilModel
@{
    ViewData["Title"] = "Alteração de Perfil";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        @using (@Html.BeginForm("Edit", "Perfil", FormMethod.Post, new { id = "formEditPerfil", @class = "form-horizontal" }))
        {
            <section class="panel">
                <header class="panel-heading">
                    <div class="panel-actions">
                        <a href="#" class="panel-action panel-action-toggle" data-panel-toggle></a>
                    </div>

                    <h2 class="panel-title">Cadastro de Perfil</h2>
                </header>
                <div class="panel-body">

                    <div class="form-group row">
                        <label class="col-sm-3 control-label text-sm-right pt-2">Nome do Perfil <span class="required">*</span></label>
                        <div class="col-sm-9">
                            <input type="text" name="nome" class="form-control"
                                   maxlength="60" value="@Model.Perfil.Nome"
                                   title="Por favor informe o nome do perfil." required />
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-3 control-label text-sm-right pt-2">Descrição do Perfil <span class="required">*</span></label>
                        <div class="col-sm-9">
                            <input type="text" name="descricao" class="form-control"
                                   maxlength="60" value="@Model.Perfil.Descricao"
                                   title="Por favor informe a descrição do perfil." required />
                        </div>
                    </div>
                    <div class="form-group row">
                        @foreach (var modulo in Model.Modulos)
                        {
                            
                            <div class="row">
                                <label class="col-lg-3 control-label text-lg-right pt-2 col-lg-3">Modulo @modulo.Nome</label>
                                @{
                                    var list = modulo.Funcionalidades;

                                    if (list != null && list.Any())
                                    {
                                        string[] funcionalidades = list[0].Nome.Split(',');

                                        foreach (var funcionalidade in funcionalidades)
                                        {
                                            <div class="col-lg-2">
                                                <label class="col-sm-6 control-label text-sm-right pt-2">@funcionalidade</label>
                                                <div class="switch switch-sm switch-dark">
                                                    @{
                                                        var listFuncSaved = Model.Claims.ToList().Where(x => x.Type == modulo.Nome);
                                                        var fun = listFuncSaved.Select(s => s.Value).FirstOrDefault()?.Split(',').ToList().Find(
                                                            delegate (string bk) { return bk == funcionalidade; }
                                                        );

                                                        if (fun != null)
                                                        {
                                                            <input type="checkbox" id="@modulo.Nome@funcionalidade" name="@modulo.Nome@funcionalidade"
                                                                   data-plugin-ios-switch checked="checked" />
                                                        }
                                                        else
                                                        {
                                                            <input type="checkbox" id="@modulo.Nome@funcionalidade" name="@modulo.Nome@funcionalidade"
                                                                   data-plugin-ios-switch />
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <p>Este módulo não tem funcionalidades atribuídas.</p>
                                    }
                                }

                            </div>
                        }
                    </div>
                </div>
                <footer class="panel-footer">
                    <div class="row">
                        <div class="col-md-9 col-md-offset-3">
                            <a href="@Url.Action("Index", "Perfil")" class="btn btn-dark pull-right" style="margin-left: 5px;margin-right: 5px;"><i class="fa fa-reply"></i> &nbsp;&nbsp;Voltar</a>
                            <button type="reset" class="btn btn-danger pull-right" style="margin-left: 5px;"><i class="fa fa-remove"></i> &nbsp;&nbsp;Cancelar</button>
                            <button type="submit" class="btn btn-success pull-right" style="margin-left: 5px;"><i class="fa fa-save"></i> &nbsp;&nbsp;Salvar</button>
                        </div>
                    </div>
                </footer>
            </section>
        }
    </div>
</div>

@section CssSpecificVendor {
}
@section Scripts {
    <script src="~/assets/vendor/ios7-switch/ios7-switch.js"></script>
    <script src="~/assets/vendor/jquery-validation/jquery.validate.js"></script>
    <script>
        (function () {

            'use strict';

            // basic
            $("#form").validate({
                highlight: function (label) {
                    $(label).closest('.form-group').removeClass('has-success').addClass('has-error');
                },
                success: function (label) {
                    $(label).closest('.form-group').removeClass('has-error');
                    label.remove();
                },
                errorPlacement: function (error, element) {
                    var placement = element.closest('.input-group');
                    if (!placement.get(0)) {
                        placement = element;
                    }
                    if (error.text() !== '') {
                        placement.after(error);
                    }
                }
            });

            if (typeof Switch !== 'undefined' && $.isFunction(Switch)) {

                $(function () {
                    $('[data-plugin-ios-switch]').each(function () {
                        var $this = $(this);

                        $this.themePluginIOS7Switch();
                    });
                });

            }

        }).apply(this, [jQuery]);

    </script>
}